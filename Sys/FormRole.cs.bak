
﻿/*
 * Сделано в SharpDevelop.
 * Пользователь: Travin
 * Дата: 16.12.2016
 * Время: 14:37
 */
 
using System;
using System.Drawing;
using System.Windows.Forms;
using System.Data;
namespace FBA
{    
    public partial class FormRole : FormObj
    {
        string SQL               = "";
        public int StatusClose   = 0;
        private string Operation = "";
        private string RoleID    = "0";   
        private DataTable DTForm1;  
        private DataTable DTForm2;    
        private DataTable DTRight1;  
        private DataTable DTRight2;
        
        public FormRole(string Operation, string RoleID, string Name, string Brief)  //FormDesigner MF, 
        {
            InitializeComponent();           
            this.Operation = Operation;
            this.RoleID    = RoleID;
            DTForm1  = new DataTable();
            DTForm2  = new DataTable(); 
            DTRight1 = new DataTable();
            DTRight2 = new DataTable();            
          
            if (Operation != "Add")
            {
                tbID.Text      = RoleID;
                tbName.Text    = Name;           
                tbBrief.Text   = Brief; 
            }                   
        }
        
        private void BtnOkClick(object sender, EventArgs e)
        {           
        	StatusClose = 1;
            if (Operation == "Add")
            {               
            	SQL = "INSERT INTO arhRole (EntityID, Name, Brief, DateCreate, DateChange) VALUES (103, '" + tbName.Text + "', '" + tbBrief.Text + "', " + sys.DateTimeCurrent() + ", " + sys.DateTimeCurrent() + ");"; 
                sys.Exec("Remote", SQL, out RoleID);
            }
            if (Operation == "Edit")
            {                             
                SQL = "UPDATE arhRole SET " +
                     "Name  = '" + tbName.Text + "'," + 
                     "Brief = '" + tbBrief.Text  + "'," +
                     "UserChangeID = '" + sys.UserID  + "'," +                     
                     "DateChange = " + sys.DateTimeCurrent() + " " +
                     "WHERE ID = " + RoleID + ";" + sys.CR; 
               sys.Exec("Remote", SQL);               
            }                   
            string SQLINSERT = "";
            string FormID    = ""; 
            string RightID   = "";             
            SQL = "DELETE FROM arhRelRoleForm WHERE RoleID = " + RoleID + "; " + sys.CR +
                  "DELETE FROM arhRelRoleRight WHERE RoleID = " + RoleID + ";";
            for (int i = 0; i < DTForm2.Rows.Count; i++)
            {        	 	 
        	 	FormID = sys.DGRowInt(dgvForm2, i, "ID");   
        	 	SQLINSERT += "INSERT INTO arhRelRoleForm (EntityID, FormID, RoleID, UserCreateID, DateCreate) " + 
        	 	    "VALUES (104, " + FormID + ", " + RoleID + ", " + sys.UserID + ", " + sys.DateTimeCurrent() + "); \r\n";                      
            }
            for (int i = 0; i < DTRight2.Rows.Count; i++)
            {                  
                 RightID = sys.DGRowInt(dgvRight2, i, "ID");   
                 SQLINSERT += "INSERT INTO arhRelRoleRight (EntityID, RightID, RoleID, UserCreateID, DateCreate) " + 
                     "VALUES (104, " + RightID + ", " + RoleID + ", " + sys.UserID + ", " + sys.DateTimeCurrent() + "); \r\n";                      
            }
            
            SQL += SQLINSERT;
            sys.Exec("Remote", SQL);
            Close();        
        }    
        	 	
        private void BtnCancelClick(object sender, EventArgs e)
        {
            StatusClose = 2;
            Close();
        }
        
        private void FormRoleResize(object sender, EventArgs e)
        {
        	pnlForm1.Width  = (pnlForm.Width  - pnlFormSplitter.Width)  / 2;
            pnlRight1.Width = (pnlRight.Width - pnlRightSplitter.Width) / 2;        	
        }
            
        private void FormRoleLoad(object sender, EventArgs e)
        {
        	//Формы
            SQL = "SELECT ID, Name FROM arhForm WHERE DEL = 0 OR DEL IS NULL";
        	sys.SelectDT("Remote", SQL, out DTForm1);
        	dgvForm1.DataSource = DTForm1;
        	
        	SQL = "SELECT t2.ID, t2.Name FROM arhRelRoleForm t1 LEFT JOIN arhForm t2 ON t2.ID = t1.FormID WHERE t1.RoleID = " + RoleID;    
        	sys.SelectDT("Remote", SQL, out DTForm2);
        	dgvForm2.DataSource = DTForm2;
        	
        	//Права
            SQL = "SELECT ID, Name FROM arhRight";    
            sys.SelectDT("Remote", SQL, out DTRight1);
            dgvRight1.DataSource = DTRight1;
            
            SQL = "SELECT t2.ID, t2.Name FROM arhRelRoleRight t1 LEFT JOIN arhRight t2 ON t2.ID = t1.RightID WHERE t1.RoleID = " + RoleID;    
            sys.SelectDT("Remote", SQL, out DTRight2);
            dgvRight2.DataSource = DTRight2;        	
        }
        
        #region Регион. Формы.
           
        ///Добавление одной формы
        private void AddForm()
        {
        	string RowID   = sys.DGSelected(dgvForm1, "ID");
        	string RowName = sys.DGSelected(dgvForm1, "Name"); 
        	DataRow[] dt;
        	dt = DTForm2.Select("Name='" + RowName + "'");
        	if (dt.Length > 0)
        	{
        		sys.SM("Форма уже добавлена!");
        	    return;
        	}
        	DataRow Row1 = DTForm2.NewRow();
        	Row1["ID"]   = RowID;
        	Row1["Name"] = RowName; 
        	DTForm2.Rows.Add(Row1);
        }
        
        //Добавление/удаление форм.
        void BtnAddClick(object sender, EventArgs e)
        {        	            			  		     		            
        	string SenderName = sys.GetSenderName(sender); 
        	if (SenderName == "btnFormAdd") AddForm();
        	if (SenderName == "dgvForm1")   AddForm();
        	 
        	//Добавление всех форм.
        	if (SenderName == "btnFormAddAll")
        	{
        	    DTForm2.Rows.Clear();
                for (int i = 0; i < DTForm1.Rows.Count; i++)
                {
                    DataRow Row1 = DTForm2.NewRow(); 
                    Row1["ID"]   = sys.DGRowInt(dgvForm1, i, "ID");
                    Row1["Name"] = sys.DGRowInt(dgvForm1, i, "Name");            
                    DTForm2.Rows.Add(Row1);                         
                }                                              
        	}
        	
        	//Удаление одной формы.
        	if (SenderName == "btnFormDel")  dgvForm2.DGSelectedDeleteFirst();//  sys.DGVDelete(dgvForm2);
        	
        	//Удаление всех форм.
            if (SenderName == "btnFormDelAll")  DTForm2.Rows.Clear();           
        }
        
        #endregion Регион. Формы.
        
        #region Регион. Права.
        
        //Добавление одного права.
        private void AddRight()
        {
            string RowID   = sys.DGSelected(dgvRight1, "ID");
            string RowName = sys.DGSelected(dgvRight1, "Name"); 
            DataRow[] dt;
            dt = DTRight2.Select("Name='" + RowName + "'");
            if (dt.Length > 0)
            {
                sys.SM("Право уже добавлено!");
                return;
            }
            DataRow Row1 = DTRight2.NewRow();
            Row1["ID"]   = RowID;
            Row1["Name"] = RowName; 
            DTRight2.Rows.Add(Row1);
        }
        
        //Добавление/удаление прав.
        void BtnRightAddClick(object sender, EventArgs e)
        {                                                                       
            string SenderName = sys.GetSenderName(sender); 
            if (SenderName == "btnRightAdd") AddRight();
            if (SenderName == "dgvRight1")   AddRight();
                
                    
            //Добавление всех форм.
            if (SenderName == "btnRightAddAll")
            {
                DTRight2.Rows.Clear();
                for (int i = 0; i < DTRight1.Rows.Count; i++)
                {
                    DataRow Row1 = DTRight2.NewRow(); 
                    Row1["ID"]   = sys.DGRowInt(dgvRight1, i, "ID");
                    Row1["Name"] = sys.DGRowInt(dgvRight1, i, "Name");            
                    DTRight2.Rows.Add(Row1);                         
                }                                              
            }
            
            //Удаление одного права.
            if (SenderName == "btnRightDel")  dgvRight2.DGSelectedDeleteFirst();  //sys.DGVDelete(dgvRight2);
            
            //Удаление всех прав.
            if (SenderName == "btnRightDelAll")  DTRight2.Rows.Clear();           
        }
              
        #endregion Регион. Права.
		  
    }
}
    