
﻿/*
 * Создано в SharpDevelop.
 * Пользователь: Travin
 * Дата: 16.08.2017
 * Время: 16:30
 */
 
using System;
using System.Drawing;
using System.Windows.Forms;
 
namespace FBA
{      
    ///Форма для просмотра и изменений свойств сущности.
    public partial class FormEntity : FormObj
    {
        public int StatusClose    = 0;
        private string Operation;
        private string ObjID;
        private string ObjBrief;
        private string ObjName;
        private string ParentID;
        private FBA.ObjectRef Obj;
        private bool DoChecked;
        
        ///Конструктор формы.
        public FormEntity(string Operation, string ObjID, string ObjBrief, string ObjName)
        {
            InitializeComponent();                                       
            this.Operation = Operation;
            this.ObjID     = ObjID;
            this.ObjBrief  = ObjBrief;
            this.ObjName   = ObjName;           
            this.ParentID = "0";            
            if (Operation == "Add") this.ObjID = "0";      
            if (Operation == "AddChild") 
            {               
                this.ParentID = this.ObjID;
                tbParentID.Text = this.ParentID; 
                this.ObjID    = "";                     
            }                        
                       
            if (Operation == "Del") SetShowOnly();             
            SetTextButtonOk(Operation, btnOk);                                             
            FillData();
        }
                    
        ///Заполнение свойств компонентов значениями.
        private void FillData()
        {                               
            Obj = new FBA.ObjectRef();            
            Obj.SetQueryTable(this, "Main1", "arhEntity", ObjID, "ID", "", "Remote");
            DoChecked = false;
            Obj.Read();
            int val = tbFeature.Text.ToInt();           
            cbSystem.Checked   = sys.GetBit(val, 0); 
            cbAccObj.Checked   = sys.GetBit(val, 1);
            cbTree.Checked     = sys.GetBit(val, 2);
            cbDiv.Checked      = sys.GetBit(val, 3);
            cbCounter.Checked  = sys.GetBit(val, 4);
            cbProtocol.Checked = sys.GetBit(val, 5); 
            DoChecked = true;   
            
            //if ((Operation == "Add") || (Operation == "AddChild")) tbParentID.Text = this.ParentID; 
            //this.SetValue("Main2.Сокр", "Вид8");                       
        }  
        
        ///Кнопка Cancel.
        private void btnCancel_Click(object sender, EventArgs e)
        {
            StatusClose = 2;
            DialogResult = DialogResult.Cancel;
            Close();
        }
        
        ///Кнопка Ok.
        private void btnOk_Click(object sender, EventArgs e)
        {                      
            bool Result = false;                
            if (Operation == "Del")      Result = OperationDelete();
            if (Operation == "Add")      Result = Obj.Write();
            if (Operation == "AddChild") Result = Obj.Write();
            if (Operation == "Edit")     Result = Obj.Write();
            if (Result)
            {
                DialogResult = DialogResult.OK;
                StatusClose = 1;
            } else           
            {
                DialogResult = DialogResult.Cancel;
                StatusClose = 2;            
            }
            Close();
        }
        
        private bool OperationDelete()
        {
            if (!sys.SM("Вы хотите действительно удалить сущность?", "Question", "Удаление сущности")) return false;            
            string SQL = "SELECT Count(*) AS cnt FROM arhAttr WHERE AttributeEntityID = " + ObjID;           
            string AttrCount = sys.GetValue("Remote", SQL);
            if (AttrCount != "0") 
            {
                sys.SM("Ошибка. У сущности есть атрибуты. Удаление невозможно.");
                return false;
            }
            return Obj.DeleteObj("Main1");         
        }
        
        //Изменение галок Feature.
        private void cbSystem_CheckedChanged(object sender, EventArgs e)
        {               
            if (!DoChecked) return;
            string TwoStr =
                cbProtocol.Checked.ToInt().ToString() +
                cbCounter.Checked.ToInt().ToString() +
                cbDiv.Checked.ToInt().ToString() +     
                cbTree.Checked.ToInt().ToString() +    
                cbAccObj.Checked.ToInt().ToString() +     
                cbSystem.Checked.ToInt().ToString();                
            tbFeature.Text = sys.IntConvertFrom2(TwoStr).ToString();
            //Obj.ShowArray("Ent");
            //Obj.ShowArray("Ref");
            //Obj.ShowArray("Tbl");
        }                      
    }
}
