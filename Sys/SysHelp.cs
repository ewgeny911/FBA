/*
 * Created by SharpDevelop.
 * User: Evgeniy.Travin
 * Date: 18.11.2019
 * Time: 14:34
 * 
 * To change this template use Tools | Options | Coding | Edit Standard Headers.
 */
using System;
using System.Drawing;
using System.Windows.Forms;

namespace FBA
{
	/// <summary>
	/// Description of SysEnter.
	/// </summary>
	public partial class sys
	{
		/// <summary>
        /// Показ справки.
        /// </summary>
        public static void ShowHelp()
        {
            Help.ShowHelp(null, FBAPath.FileHelp);		
			//System.Diagnostics.Process.Start("help.chm");
        }
        
		/// <summary>
        /// Показ подробной справки по классам, методам, и т.д.
        /// </summary>
        public static void ShowDocumentation()
        {           
		
        	System.Diagnostics.Process.Start(FBAPath.FileDocumentation);
        }  
	}
}








/*

Введение:
Данная программа (далее платформа) предназначена для создания простых бизнес приложений. 
Часть часто используемого функционала уже реализована в платформе, поэтому при написании бизнесс приложений
сокращаются затраты на разработку.

Описание файлов:
ClientApp.exe - запускной файл клиента
License.exe   - запускной файл для работы с лицензиями программы.
ParserApp.exe - запускной файл программы для тестирования парсера.
ServerApp.exe - запускной файл сервера приложений
Updater.exe   - запускной файл обновлятора для программы.
Utility.exe   - запускной файл различных утилит платформы.

DLLCustom.dll  - пример шаблона прикладного модуля DLL.
FormMain.dll   - пример шаблона прикладного модуля формы, которая запускается первой.
FormCustom.dll - пример шаблона прикладного модуля формы. 
DotNetZip.dll  - библиотека для работы с архивами ZIP.
FastColoredTextBox.dll - компонент, позволяющий выводить текст с форматированием и номерами строк. Это компонент редактор кода.
libwebp.dll    - библиотека для работы с изображениями в формате WEBP. Этото формат используется для сохранения скриншота ошибок. Формат компактнее чем JPEG примерно на 30%. 
local.db3      - локальная встроенная база даннных SQLite.
Microsoft.Office.Interop.Excel.dll - библиотека для работы с Excel. Испоьзуется для экспорта таблиц в Excel.
Npgsql.dll     - библиотека для работы с базой данных PostgreSQL. 
NPOI.dll       - библиотека для работы с Excel без установленного Excel. Позволяет формирвоать отчеты в формате XLSX, без установленного Excel не компьютере клиента.
NPOI.OOXML.dll - составная часть библиотеки для работы с Excel.
NPOI.OpenXml4Net.dll- составная часть библиотеки для работы с Excel.
NPOI.OpenXmlFormats.dll- составная часть библиотеки для работы с Excel.
ParserDLL.dll  - Парсер в виде отдельной библиотеки DLL. Может быть подключен как сборка (Assembly) в базе данных SQLServer.
Quartz.dll     - библиотека для создания шедулера.
Quartz.xml     - составная часть библиотеки для создания шедулера.
SourceGrid.dll - библиотека замена грида на формах. Работает быстрее чем стандартный грид.
sys.dll        - основная библиотека платформы.
System.Data.SQLite.dll - библиотека для работы с базой SQLite.
ICSharpCode.SharpZipLib - составная часть библиотеки NPOI - файл для печати отчетов в Excel.



//Сисок возможностей платформы:
//Словарная система
//Программа для управления словарной системой
//Ролевая модель
//Свой сервер приложений и свой протокол взаимодействия между сервером приложением и клиентом
//Возможность работы минуя сервер приложений, напрямую с БД
//Возможность работы напрямую с БД, с запросом пароля к БД с сервера приложений.
//Динамическая подгрузка форм
//Библиотека часто используемых функций
//Возможности выгрузки данных в Excel, CSV
//Поиск данных в таблице
//Парсер языка MasterSQL.
//Система лицензирования
//Обновление клиента
//Выполнение запросов к БД в многопоточном режиме.
//Шаблоны прикладных форм.
//Клиент для выполнения запросов на SQL и MasterSQL.
//Поддержка параметров приложения
//Классы визуальных компонентов расширены. Всего 16 компонентов.



Возможности:
Наличие встроенной базы данных SQLite и функций для работы с ней.
Возможность динамической подгрузки модулей. Пож модулем понимается форма или файл dll.
Наличие собственного сервера приложений.
Возможность подключения и работы как напрямую к СУБД, так и через сервер приложений.
Наличие собственной ORM модели и языка запросов к этой модели.
Возможность выбирать столбцы для отображения в таблицах из модели данных. Пользовательски таблицы гибко настраиваются.
Наличие ролевой модели
Наличие функционала для работы с параметрами приложения.
Автоматическое логирование ошибок клиента на сервере.
Возможность упаравления кдиентами с сервера приложений.
Возможность в качестве СУБД использовать такие СУБД как MSSQL, PostgreQL и SQite (для демонстрации возможностей)
Возможность загружать в БД тексты, изображения, файлы и функционал для работы с этими списками.
Наличие функционала для записи объекта/изменения/удаления объекта модели данных.
Наличие функционала для формирования отчетов в MS Excel без установленного Excel на компьютере пользователя. 
Большая библиотека функций для работы со строками, датами, временем, числами, файлами.
Библиотека функций для шифрования.
Наличие собственных компонентов для разработки бизнес приложений: 
SplitContainerFBA, GridFBA, ProgressBarFBA, GroupBoxFBA, LabelFBA, TextBoxFBA, 
ComboBoxFBA, CheckBoxFBA, RadioButtonFBA, PanelFBA, ButtonFBA, TabControlFBA, DataGridViewFBA, 
FastColoredTextBoxFBA, DateTimePickerFBA
Функционал импорта из файлов CSV, Excel.

Основное предназначение данной программы - это сокращение времени на разработку бизнесс-приложений.
В данной программе (далее платформе) реализовано большое количество различных возможностей и функционала, которые обычно требуется
для написания большингства бизнесс-приложений. Такие как:
Авторизация для подключения к базе данных.
Сервер приложений - третье звено при работе с базой данных.
Простая рлевая модель. Функционал заведения, редактирвания, удаления пользоватлей и прав на функционал.
Простая модель данных. Это аналог фреймворков типа EntityFramework, работающий следующим образом:
В базе данных есть три таблицы: fbaEntity, fbaTable, fbaAttribute. В эти таблицы заводятся соотвтетственно сущности, таблицы, и атрибуты сущностей.
Это необходимо для того чтобы можно было писать запросы к базе данных в терминах сущносей и атрибутов, а не таблиц и полей. 
На практике это существенно снижает сложность запросов и увеличивает скорость разработки. 
Такой запрос называется запросом на языке MSQL, в отличие от обычного SQL.
Запросы на языке MSQL гораздо легче писать, редактировоать, вносить изменения.
Также значительно снижается количестиво строк (длина запросов). 
По личным наблюдениям скорость написания запросов на языке MSQL ускоряет написание запросов примерно в 5 раз. 
Чем более сложный запрос нужно написать, тем больше проявляются преимущества подхода написания запросов в терминах сущностей и атрибутов, 
по отношению к традиционному написанию запросов на языке SQL. Для простых запросов разницы практически нет.
В платформе реализован парсер, который позволяет писать запросы к модели даных на языке MSQL. 
Есть простой редактор запросов MSQL - упрощенный аналог программ для работы с базами данных и написания запросов, 
таких как SQL Server Management Studio, PgAdmin, или PL/SQL Developer.

Как пример в локальную БД на SQLite заведено несколко таблиц, таких как Document, Contract, ContractAgent



Системные требования:
Минимальные системные требования
Процессор	Intel Core i5-4590/AMD FX 8350 аналогичная или более новая модель	
Память	4 ГБ ОЗУ или более	4 ГБ ОЗУ или более
Операционная система	Windows XP, Windows 7, Windows 8.1, Windows 10. 
Поддержка 32 и 64 разрядных операционных систем.
.NET Framefork 4.5 


 */

