
﻿/*
 * Сделано в SharpDevelop.
 * Пользователь: Travin
 * Дата: 26.12.2016
 * Время: 14:11    
 */ 
   
using System;
using System.Linq;
using System.Reflection;
using System.Windows.Forms;
using System.IO;
using System.Data;  
using System.Security.Cryptography;
using System.Text;
using System.Collections.Generic;
using System.Data.SqlClient;
using Npgsql;
using System.Data.SQLite;
using System.Drawing;
using System.Runtime.Serialization.Json;
using System.CodeDom.Compiler;
using Microsoft.CSharp;
using System.Collections;
//using Microsoft.Office.Interop.Excel; //Для экспорта в Excel
using System.Runtime.InteropServices; //Для экспорта в Excel
using System.Deployment.Application;
using System.Text.RegularExpressions;
//using FastColoredTextBoxNS;
//using Npgsql.BulkCopy;
//using Npgsql.BulkCopy.Native;
//using Npgsql.BulkCopy.Native.Versions;      
using System.Net;
using System.Net.Sockets;
using FastColoredTextBoxNS; 
using System.Diagnostics;
//using SourceGrid;
//using Padeg.dll;
//using iTextSharp;
//using iTextSharp.text.pdf;
//using iTextSharp.text;
using System.Xml;
using System.Runtime.Serialization.Formatters.Binary;
using System.Threading;
using System.Security.Permissions;
  
namespace FBA
{
    ///Форма для показа сообщения.
    public partial class FormSM : FormSim
    {
        //int TabIndexSQL;
          
        
        public bool Result = true;
        /*Abort
        Cancel   
        Ignore 
        No
        OK     
        Retry     
        Yes             
        None - Nothing возвращается из диалогового окна. Это означает, что модальное диалоговое окно продолжает выполнение.
        */
        public FormSM(string Mes, string TypeMessage, string Caption)
        {            
            InitializeComponent();            
            splitContainer1.Panel2Collapsed = true; 
            
            //this.MdiParent = sys.FormMainObj;
             
            ///this.pictureBox1.Size = image.Size;
            //pictureBox1.Image = image;
            //pictureBox1.Invalidate();
            
            if (TypeMessage == "Error") 
            {
                if (Caption != "") Text = Caption; else Text = "Error!";                  
                TextBoxMes.BackColor    = Color.AntiqueWhite;
                pictureBox1.Image       = global::FBA.Resource.Error_32;
                button1.Image           = global::FBA.Resource.Danger_24;
                button1.Text            = "  Ok";
            }
            
            if (TypeMessage == "Stop") 
            {
                if (Caption != "") Text = Caption; else Text = "Stop!";                  
                TextBoxMes.BackColor    = Color.AntiqueWhite;
                pictureBox1.Image       = global::FBA.Resource.Stop_32;
                button1.Image           = global::FBA.Resource.Danger_24;
                button1.Text            = "  Ok";
            }
            
            if (TypeMessage == "Information") 
            {
                if (Caption != "") Text = Caption; else Text = "Information!";                            
                TextBoxMes.BackColor    = Color.FromArgb(255, 255, 192);
                pictureBox1.Image       = global::FBA.Resource.Information_32;
                button1.Image           = global::FBA.Resource.OK_24;
                button1.Text            = "  Ok";
            }
                         
            if (TypeMessage == "Warning") 
            {
                if (Caption != "") Text = Caption; else Text = "Warning!";                  
                TextBoxMes.BackColor    = Color.LightYellow;
                pictureBox1.Image       = global::FBA.Resource.Warning_32; 
                button1.Image           = global::FBA.Resource.OK_24;
                button1.Text            = "  Ok";
            }
            
            if (TypeMessage == "Question") 
            {
                if (Caption != "") Text = Caption; else Text = "Question!";  
                TextBoxMes.BackColor    = Color.LightGreen;                
                button2.Visible         = true;
                button1.Text            = "  Yes";
                button2.Text            = "  No";                 
                pictureBox1.Image       = global::FBA.Resource.Question_32; 
                button1.Image           = global::FBA.Resource.OK_24;  
              
            }
            pictureBox1.Invalidate();
            TextBoxMes.Text = Mes;
            //return;
            //TextBoxError.Text = sys.FileReadTextSimple("test1.txt"); 
            ShowCodeText();
        }
        
        ///Показ вкладки c модулями, в которых произошли ошибки.
        private void ShowCodeText()
        {   
            var Errors = new string[10, 5];
            int Index = 0;
            string Forms = "'aaa'";         
            string FileName;
            for (int i = 0; i <= TextBoxMes.Lines.Count() - 1; i++)
            {
                string s = TextBoxMes.Lines[i];
                int N2 = s.LastIndexOf(@".cs:",    StringComparison.OrdinalIgnoreCase);                
                if (N2 == -1) continue;
                int N3 = s.LastIndexOf(@"строка ", StringComparison.OrdinalIgnoreCase);
                if (N3 == -1) continue;
                int N1 = s.LastIndexOf(@"\",       StringComparison.OrdinalIgnoreCase);
                
                //"\FormEnter.cs:строка 57"
                if (N2 > N1) 
                {
                    FileName  = s.Substring(N1 + 1, N2 - N1 - 1); 
                    Errors[Index, 0] = Index.ToString();     //Порядковый номер, начиная с 0.
                    Errors[Index, 1] = FileName;             //Имя файла.
                    Errors[Index, 2] = s.Substring(N3 + 7).Trim();  //Номер строки с ошибкой.
                    Errors[Index, 3] = i.ToString();         //Номер строки в TextBoxError.
                    Forms += ",'" + FileName + "'";          //Все имена файлов.
                }
                Index++;
                if (Index == 10) break;
            }
            if (Index == 0) return;
            
            //sys.ArrayView("Errors1", "", Errors);
            //MainForm 57
            //Form1    40
            //MainForm 20
            //Form     10               
            string FieldCodeText = "TextCodeTest";
            if (sys.EnterMode == "Work") FieldCodeText = "TextCode";
            string SQL = "SELECT ID, Name, " + FieldCodeText + " FROM arhForm WHERE Name IN (" + Forms + ")";            
            System.Data.DataTable DT;
            sys.SelectDT("Local", SQL, out DT);
            if (DT.Rows.Count == 0) 
            {               
                //TODO: показ ошибок на диске
                return;
            }
                       
            FileName         = sys.DTValue(DT, 0, "Name"); 
            TextBoxCode.Text = sys.DTValue(DT, 0, FieldCodeText);
            
            
            tabPage1.Text    = FileName;
            splitContainer1.Panel2Collapsed = false;         
            int N = 0;
            for (int i = 0; i <= Index - 1; i++)
            {
                N = Errors[i, 2].ToInt();
                if (N == 0) continue;
                if (Errors[i, 1] != FileName) continue;                               
                TextBoxCode.BookmarkLine(N-1);                           
            }
            if (N > 0) TextBoxCode.Navigate(N-1);
            
            for (int i = 1; i <= DT.Rows.Count - 1; i++)
            {               
                FileName    = sys.DTValue(DT, i, "Name");
                string Code = sys.DTValue(DT, i, FieldCodeText);             
                TabControlPageAdd(tabControl1, TextBoxCode, FileName, Code, Errors, Index);
            }  
                                                                             
            //if (sys.UserIsAdmin) btnSave.Visible = true;                          
            //TextBoxCode.CurrentLineColor = Color.Blue;                       
        }
                           
        ///Добавление новой вкладки для редактора запросов.
        public void TabControlPageAdd(TabControl tabControlCode,                                              
                                             FastColoredTextBox textSQLExample,                                                                                     
                                             string FileName,
                                             string Code,
                                             string[,] Errors,
                                             int Index)
        {                                           
            tabControlCode.TabPages.Add(FileName);                                                       
            var fctb1 = new FastColoredTextBox();          
            tabControlCode.TabPages[tabControlCode.TabPages.Count-1].Controls.Add(fctb1);
            fctb1.Dock                          = textSQLExample.Dock;
            fctb1.AutoCompleteBrackets          = textSQLExample.AutoCompleteBrackets;
            fctb1.AutoScrollMinSize             = textSQLExample.AutoScrollMinSize;
            fctb1.BookmarkColor                 = textSQLExample.BookmarkColor;
            fctb1.BracketsHighlightStrategy     = textSQLExample.BracketsHighlightStrategy;
            fctb1.Cursor                        = textSQLExample.Cursor;
            fctb1.DisabledColor                 = textSQLExample.DisabledColor;
            fctb1.FindEndOfFoldingBlockStrategy = textSQLExample.FindEndOfFoldingBlockStrategy;
            fctb1.Font                          = textSQLExample.Font;
            fctb1.Language                      = textSQLExample.Language;
            fctb1.LeftBracket                   = textSQLExample.LeftBracket;
            fctb1.RightBracket                  = textSQLExample.RightBracket;
            //fctb1.Padding                       = textSQLExample.Padding;                
            fctb1.SelectionColor                = textSQLExample.SelectionColor;
            fctb1.VirtualSpace                  = textSQLExample.VirtualSpace;
            fctb1.Text                          = Code;
            fctb1.Name                          = "textCode" + Index;
            fctb1.BackColor                     = textSQLExample.BackColor;
            fctb1.CurrentLineColor              = textSQLExample.CurrentLineColor;
            fctb1.VirtualSpace                  = textSQLExample.VirtualSpace;
            fctb1.BorderStyle                   = textSQLExample.BorderStyle;
            int N = 0;
            for (int i = 0; i <= Index - 1; i++)
            {
                if (Errors[i, 1] != FileName) continue;
                N = Errors[i, 2].ToInt();
                if (N > 0) fctb1.BookmarkLine(N - 1);                                            
            }
            if (N > 0) TextBoxCode.Navigate(N-1); 
        }
        
        ///Кнопка Ok. 
        public void Button1Click(object sender, EventArgs e)
        {
            this.Result = true;
            this.Close();
        }
        
        ///Кнопка Cancel. 
        public void Button2Click(object sender, EventArgs e)
        {
            this.Result = false;
            this.Close();
            
           
        }
        
        private void FormSMLoad(object sender, EventArgs e)
        {
             //splitContainer1.Panel2Collapsed = true; 
        }
        
        ///Галка WordWrap на форме.
        public void CbWordWrapCheckedChanged(object sender, EventArgs e)
        {
            TextBoxMes.WordWrap = cbWordWrap.Checked;
        }
        
        ///Контекстное меню.
        public void cmMenu_N1_Click(object sender, EventArgs e)
        {
            string ControlName = sys.GetControlNameByMenuStripItem(sender);
            if (ControlName == "TextBoxMes")  TextBoxMes.Text.CopyToClipboard();
            if (ControlName == "TextBoxCode") TextBoxCode.Text.CopyToClipboard();
        
        }                          
    }
}
